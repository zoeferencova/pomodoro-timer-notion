{"version":3,"sources":["sounds/pomodoro-alarm.mp3","tab-settings.js","Tab/Tab.js","TabBar/TabBar.js","Controls/Controls.js","Widget/Widget.js","App.js","reportWebVitals.js","index.js"],"names":["tabData","tabName","time","next","altNext","Tab","props","className","onClick","e","changeTab","index","TabBar","map","tab","i","Controls","type","handleRestart","timerOn","handlePause","handleStart","alarm","Audio","alarmSound","Widget","clockRef","current","stop","setState","currentTab","handleCompletion","state","pomodoros","play","start","pause","pausedTime","calcTimeDelta","total","find","createRef","this","date","Date","now","autoStart","controlled","renderer","minutes","zeroPad","seconds","ref","onComplete","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50533795.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pomodoro-alarm.f968a6d0.mp3\";","const tabData = [\n    {\n        tabName: \"Pomodoro\",\n        time: 1500000,\n        next: 1,\n        altNext: 2\n    },\n    {\n        tabName: \"Short Break\",\n        time: 300000,\n        next: 0,\n        altNext: null\n    },\n    {\n        tabName: \"Long Break\",\n        time: 900000,\n        next: 0,\n        altNext: null\n    }\n]\n\nexport default tabData;\n","import './Tab.css';\n\nconst Tab = (props) => {\n  return (\n    <div className=\"tab\" onClick={e => props.changeTab(props.index)}>\n      <span>{props.tabName}</span>\n    </div>\n  );\n}\n\nexport default Tab;","import tabData from '../tab-settings';\nimport Tab from '../Tab/Tab';\n\nimport './TabBar.css';\n\nconst TabBar = props => {\n  return (\n    <div className=\"tab-bar\">\n      {tabData.map((tab, i) => <Tab key={i} index={i} tabName={tab.tabName} time={tab.time} changeTab={props.changeTab}></Tab>)}\n    </div>\n  );\n}\n\nexport default TabBar;","import './Controls.css';\n\nconst Controls = props => {\n  return (\n    <div>\n      <button type=\"submit\" className=\"restart-button\" onClick={props.handleRestart}>\n        Restart\n      </button>\n      <button type=\"submit\" className=\"start-pause-button\" onClick={props.timerOn ? props.handlePause : props.handleStart}>\n        {props.timerOn ? \"Pause\" : \"Start\"}\n      </button>\n    </div>\n    \n  );\n}\n\nexport default Controls;","import { Component, createRef } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport alarmSound from '../sounds/pomodoro-alarm.mp3';\nimport tabData from '../tab-settings';\nimport TabBar from '../TabBar/TabBar';\nimport Controls from '../Controls/Controls';\n\nimport './Widget.css';\n\nlet alarm = new Audio(alarmSound);\n\nclass Widget extends Component {\n  constructor(props) {\n    super(props);\n    this.clockRef = createRef();\n    this.state = {\n      currentTab: tabData[0],\n      timerOn: false,\n      pomodoros: 1,\n    }\n  }\n\n  changeTab = index => {\n    this.clockRef.current.stop();\n    this.setState({ timerOn: false, currentTab: tabData[index] });\n  }\n\n  handleCompletion = () => {\n    this.state.currentTab.tabName === \"Pomodoro\" && this.setState({ pomodoros: this.state.pomodoros + 1 })\n    this.setState({ timerOn: false });\n    alarm.play();\n    this.state.pomodoros % 4 === 0 && this.state.currentTab.altNext ? this.changeTab(this.state.currentTab.altNext) : this.changeTab(this.state.currentTab.next);\n  }\n\n  handleStart = () => {\n    this.clockRef.current.start();\n    this.setState({ timerOn: true });\n  };\n\n  handlePause = () => {\n    this.clockRef.current.pause();\n    const pausedTime = this.clockRef.current.calcTimeDelta().total;\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: pausedTime } });\n  };\n\n  handleRestart = () => {\n    const currentTab = tabData.find(tab => tab.tabName === this.state.currentTab.tabName)\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: currentTab.time } });\n    this.clockRef.current.stop();\n  }\n\n  render() {\n    return (\n      <div className=\"widget\">\n        <TabBar currentTab={this.state.currentTab.tabName} changeTab={this.changeTab} />\n        <Countdown \n          date={Date.now() + (this.state.currentTab.time)} \n          autoStart={false} \n          controlled={false} \n          renderer={(props) => <div>{props.minutes}:{zeroPad(props.seconds)}</div>} \n          ref={this.clockRef}\n          onComplete={this.handleCompletion}>\n        </Countdown>\n        <Controls timerOn={this.state.timerOn} handlePause={this.handlePause} handleStart={this.handleStart} handleRestart={this.handleRestart} />\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n\n\n","import './App.css';\nimport Widget from './Widget/Widget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}