{"version":3,"sources":["Tab/Tab.js","TabBar/TabBar.js","Button/Button.js","Clock/Clock.js","Widget/Widget.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","props","className","onClick","e","changeTab","tabName","minutes","TabBar","time","Button","timerOn","handlePause","handleStart","timerPaused","Clock","clockRef","useRef","date","Date","now","autoStart","controlled","renderer","zeroPad","seconds","ref","current","pause","start","startTimer","Widget","setState","currentTab","state","this","pauseTimer","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAUeA,EARH,SAACC,GACX,OACE,qBAAKC,UAAU,MAAMC,QAAS,SAAAC,GAAC,OAAIH,EAAMI,UAAUJ,EAAMK,QAASL,EAAMM,UAAxE,SACE,+BAAON,EAAMK,aCSJE,G,MAVA,SAAAP,GACb,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAKI,QAAQ,WAAWG,KAAK,KAAKJ,UAAWJ,EAAMI,YACnD,cAAC,EAAD,CAAKC,QAAQ,cAAcG,KAAK,IAAIJ,UAAWJ,EAAMI,YACrD,cAAC,EAAD,CAAKC,QAAQ,aAAaG,KAAK,KAAKJ,UAAWJ,EAAMI,iB,OCC5CK,G,MARA,SAAAT,GACb,OACE,qBAAKC,UAAU,SAASC,QAASF,EAAMU,QAAUV,EAAMW,YAAcX,EAAMY,YAA3E,SACGZ,EAAMa,YAAc,QAAU,YCqBtBC,G,MApBD,SAAAd,GACZ,IAAMe,EAAWC,mBAWjB,OACE,sBAAKf,UAAU,QAAf,UACE,cAAC,IAAD,CAAWgB,KAAMC,KAAKC,MAAS,IAAYnB,EAAMQ,KAAOY,WAAW,EAAOC,YAAY,EAAOC,SAAU,SAACtB,GAAD,OAAW,gCAAMA,EAAMM,QAAZ,IAAsBiB,YAAQvB,EAAMwB,aAAiBC,IAAKV,IAC5K,cAAC,EAAD,CAAQL,QAASV,EAAMU,QAASC,YAPhB,WAClBI,EAASW,QAAQC,SAM2Cf,YAZ1C,WAClBG,EAASW,QAAQE,QACjB5B,EAAM6B,qBC0BKC,G,wDA7Bb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAUR6B,WAAa,WACX,EAAKE,SAAS,CAAErB,SAAS,KAZR,EAenBN,UAAY,SAACC,EAASG,GACpB,EAAKuB,SAAS,CAAEC,WAAY,CAAC3B,UAASG,QAAOE,SAAS,KAdtD,EAAKuB,MAAQ,CACXD,WAAY,CACV3B,QAAS,WACTG,KAAM,IAERE,SAAS,GAPM,E,0CAmBnB,WACE,OACE,sBAAKT,UAAU,SAAf,UACE,cAAC,EAAD,CAAQ+B,WAAYE,KAAKD,MAAMD,WAAW3B,QAASD,UAAW8B,KAAK9B,YACnE,cAAC,EAAD,CAAOI,KAAM0B,KAAKD,MAAMD,WAAWxB,KAAME,QAASwB,KAAKD,MAAMvB,QAASmB,WAAYK,KAAKL,WAAYM,WAAYD,KAAKC,oB,GAxBvGC,cCINC,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90741809.chunk.js","sourcesContent":["import './Tab.css';\n\nconst Tab = (props) => {\n  return (\n    <div className=\"tab\" onClick={e => props.changeTab(props.tabName, props.minutes)}>\n      <span>{props.tabName}</span>\n    </div>\n  );\n}\n\nexport default Tab;","import Tab from '../Tab/Tab';\n\nimport './TabBar.css';\n\nconst TabBar = props => {\n  return (\n    <div className=\"tab-bar\">\n      <Tab tabName=\"Pomodoro\" time=\"25\" changeTab={props.changeTab} />\n      <Tab tabName=\"Short Break\" time=\"5\" changeTab={props.changeTab} />\n      <Tab tabName=\"Long Break\" time=\"15\" changeTab={props.changeTab} />\n    </div>\n  );\n}\n\nexport default TabBar;","import './Button.css';\n\nconst Button = props => {\n  return (\n    <div className=\"button\" onClick={props.timerOn ? props.handlePause : props.handleStart}>\n      {props.timerPaused ? \"Pause\" : \"Start\"}\n    </div>\n  );\n}\n\nexport default Button;","import { useRef } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport Button from \"../Button/Button\"\n\nimport './Clock.css';\n\nconst Clock = props => {\n  const clockRef = useRef();\n\n  const handleStart = () => {\n    clockRef.current.start();\n    props.startTimer();\n  };\n\n  const handlePause = () => {\n    clockRef.current.pause();\n  };\n\n  return (\n    <div className=\"clock\">\n      <Countdown date={Date.now() + (1000 * 60 * props.time)} autoStart={false} controlled={false} renderer={(props) => <div>{props.minutes}:{zeroPad(props.seconds)}</div>} ref={clockRef} />\n      <Button timerOn={props.timerOn} handlePause={handlePause} handleStart={handleStart} />\n    </div>\n  );\n}\n\nexport default Clock;","import { Component } from 'react';\n\nimport TabBar from '../TabBar/TabBar';\nimport Clock from '../Clock/Clock';\n\nimport './Widget.css';\n\nclass Widget extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentTab: {\n        tabName: \"pomodoro\",\n        time: 25\n      },\n      timerOn: false,\n    }\n  }\n\n  startTimer = () => {\n    this.setState({ timerOn: true });\n  }\n\n  changeTab = (tabName, time) => {\n    this.setState({ currentTab: {tabName, time}, timerOn: false});\n  }\n\n  render() {\n    return (\n      <div className=\"widget\">\n        <TabBar currentTab={this.state.currentTab.tabName} changeTab={this.changeTab} />\n        <Clock time={this.state.currentTab.time} timerOn={this.state.timerOn} startTimer={this.startTimer} pauseTimer={this.pauseTimer} />\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import './App.css';\nimport Widget from './Widget/Widget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}