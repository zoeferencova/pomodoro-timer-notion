{"version":3,"sources":["sounds/pomodoro-alarm.mp3","tab-settings.js","Tab/Tab.js","TabBar/TabBar.js","Controls/Controls.js","Widget/Widget.js","App.js","reportWebVitals.js","index.js"],"names":["tabData","tabName","time","next","altNext","Tab","props","className","index","currentTab","onClick","e","changeTab","TabBar","map","tab","i","Controls","type","handleRestart","icon","faArrowLeft","timerOn","handlePause","handleStart","pomodoros","alarm","Audio","alarmSound","Widget","clockRef","current","stop","setState","handleCompletion","state","play","Date","getDate","currentDate","start","pause","pausedTime","calcTimeDelta","total","find","createRef","this","date","now","autoStart","controlled","renderer","minutes","zeroPad","seconds","ref","onComplete","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94a82be3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pomodoro-alarm.f968a6d0.mp3\";","const tabData = [\n    {\n        tabName: \"Pomodoro\",\n        time: 1500000,\n        next: 1,\n        altNext: 2\n    },\n    {\n        tabName: \"Short Break\",\n        time: 300000,\n        next: 0,\n        altNext: null\n    },\n    {\n        tabName: \"Long Break\",\n        time: 900000,\n        next: 0,\n        altNext: null\n    }\n]\n\nexport default tabData;\n","import './Tab.css';\n\nconst Tab = (props) => {\n  return (\n    \n    <div className={`tab tab${props.index} ${props.currentTab === props.tabName && \"active\"}`} onClick={e => props.changeTab(props.index)}>\n      {props.tabName}\n    </div>\n  );\n}\n\nexport default Tab;","import tabData from '../tab-settings';\nimport Tab from '../Tab/Tab';\n\nimport './TabBar.css';\n\nconst TabBar = props => {\n  return (\n    <div className=\"tab-bar\">\n      {tabData.map((tab, i) => <Tab key={i} index={i} currentTab={props.currentTab} tabName={tab.tabName} time={tab.time} changeTab={props.changeTab}></Tab>)}\n    </div>\n  );\n}\n\nexport default TabBar;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport './Controls.css';\n\nconst Controls = props => {\n  return (\n    <div className=\"controls\">\n      <button type=\"submit\" className=\"restart-button\" onClick={props.handleRestart}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <button type=\"submit\" className=\"start-pause-button\" onClick={props.timerOn ? props.handlePause : props.handleStart}>\n        {props.timerOn ? \"Pause\" : \"Start\"}\n      </button>\n      <span className=\"pomodoros\">{props.pomodoros}</span>\n    </div>\n    \n  );\n}\n\nexport default Controls;","import { Component, createRef } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport alarmSound from '../sounds/pomodoro-alarm.mp3';\nimport tabData from '../tab-settings';\nimport TabBar from '../TabBar/TabBar';\nimport Controls from '../Controls/Controls';\n\nimport './Widget.css';\n\nlet alarm = new Audio(alarmSound);\n\nclass Widget extends Component {\n  constructor(props) {\n    super(props);\n    this.clockRef = createRef();\n    this.state = {\n      currentTab: tabData[0],\n      timerOn: false,\n      pomodoros: 1,\n      currentDate: new Date().getDate()\n    }\n  }\n\n  changeTab = index => {\n    this.clockRef.current.stop();\n    this.setState({ timerOn: false, currentTab: tabData[index] });\n  }\n\n  handleCompletion = () => {\n    this.state.currentTab.tabName !== \"Pomodoro\" && this.setState({ pomodoros: this.state.pomodoros + 1 })\n    alarm.play();\n    this.state.pomodoros % 4 === 0 && this.state.currentTab.altNext ? this.changeTab(this.state.currentTab.altNext) : this.changeTab(this.state.currentTab.next);\n\n  }\n\n  handleStart = () => {\n    // reset pomodoros if it is a new day\n    new Date().getDate() !== this.state.currentDate && this.setState({ pomodoros: 1 });\n    this.clockRef.current.start();\n    this.setState({ timerOn: true });\n  };\n\n  handlePause = () => {\n    this.clockRef.current.pause();\n    const pausedTime = this.clockRef.current.calcTimeDelta().total;\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: pausedTime } });\n  };\n\n  handleRestart = () => {\n    const currentTab = tabData.find(tab => tab.tabName === this.state.currentTab.tabName)\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: currentTab.time } });\n    this.clockRef.current.stop();\n  }\n\n  render() {\n    return (\n      <div className=\"widget\">\n        <TabBar currentTab={this.state.currentTab.tabName} changeTab={this.changeTab} />\n        <Countdown \n          className=\"clock\"\n          date={Date.now() + (this.state.currentTab.time)} \n          autoStart={false} \n          controlled={false} \n          renderer={(props) => <span className=\"clock-numbers\">{props.minutes}:{zeroPad(props.seconds)}</span>} \n          ref={this.clockRef}\n          onComplete={this.handleCompletion}>\n        </Countdown>\n        <Controls timerOn={this.state.timerOn} handlePause={this.handlePause} handleStart={this.handleStart} handleRestart={this.handleRestart} pomodoros={this.state.pomodoros} />\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n\n\n","import './App.css';\nimport Widget from './Widget/Widget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}