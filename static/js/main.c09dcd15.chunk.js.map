{"version":3,"sources":["sounds/pomodoro-alarm.mp3","tab-settings.js","Tab/Tab.js","TabBar/TabBar.js","Controls/Controls.js","Widget/Widget.js","App.js","reportWebVitals.js","index.js"],"names":["tabData","tabName","time","next","altNext","Tab","props","className","index","currentTab","onClick","e","changeTab","console","log","TabBar","map","tab","i","Controls","type","handleRestart","icon","faArrowLeft","timerOn","handlePause","handleStart","pomodoros","alarm","Audio","alarmSound","Widget","clockRef","current","stop","setState","handleCompletion","state","play","start","pause","pausedTime","calcTimeDelta","total","find","createRef","this","date","Date","now","autoStart","controlled","renderer","minutes","zeroPad","seconds","ref","onComplete","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c09dcd15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pomodoro-alarm.f968a6d0.mp3\";","const tabData = [\n    {\n        tabName: \"Pomodoro\",\n        time: 1500000,\n        next: 1,\n        altNext: 2\n    },\n    {\n        tabName: \"Short Break\",\n        time: 300000,\n        next: 0,\n        altNext: null\n    },\n    {\n        tabName: \"Long Break\",\n        time: 900000,\n        next: 0,\n        altNext: null\n    }\n]\n\nexport default tabData;\n","import './Tab.css';\n\nconst Tab = (props) => {\n  return (\n    \n    <div className={`tab tab${props.index} ${props.currentTab === props.tabName && \"active\"}`} onClick={e => props.changeTab(props.index)}>\n      {props.tabName}\n      {console.log(props.tabName, props.currentTab)}\n    </div>\n  );\n}\n\nexport default Tab;","import tabData from '../tab-settings';\nimport Tab from '../Tab/Tab';\n\nimport './TabBar.css';\n\nconst TabBar = props => {\n  return (\n    <div className=\"tab-bar\">\n      {tabData.map((tab, i) => <Tab key={i} index={i} currentTab={props.currentTab} tabName={tab.tabName} time={tab.time} changeTab={props.changeTab}></Tab>)}\n    </div>\n  );\n}\n\nexport default TabBar;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport './Controls.css';\n\nconst Controls = props => {\n  return (\n    <div className=\"controls\">\n      <button type=\"submit\" className=\"restart-button\" onClick={props.handleRestart}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <button type=\"submit\" className=\"start-pause-button\" onClick={props.timerOn ? props.handlePause : props.handleStart}>\n        {props.timerOn ? \"Pause\" : \"Start\"}\n      </button>\n      <span className=\"pomodoros\">{props.pomodoros}</span>\n    </div>\n    \n  );\n}\n\nexport default Controls;","import { Component, createRef } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport alarmSound from '../sounds/pomodoro-alarm.mp3';\nimport tabData from '../tab-settings';\nimport TabBar from '../TabBar/TabBar';\nimport Controls from '../Controls/Controls';\n\nimport './Widget.css';\n\nlet alarm = new Audio(alarmSound);\n\nclass Widget extends Component {\n  constructor(props) {\n    super(props);\n    this.clockRef = createRef();\n    this.state = {\n      currentTab: tabData[0],\n      timerOn: false,\n      pomodoros: 1,\n    }\n  }\n\n  changeTab = index => {\n    this.clockRef.current.stop();\n    this.setState({ timerOn: false, currentTab: tabData[index] });\n  }\n\n  handleCompletion = () => {\n    this.state.currentTab.tabName !== \"Pomodoro\" && this.setState({ pomodoros: this.state.pomodoros + 1 })\n    this.setState({ timerOn: false });\n    alarm.play();\n    this.state.pomodoros % 4 === 0 && this.state.currentTab.altNext ? this.changeTab(this.state.currentTab.altNext) : this.changeTab(this.state.currentTab.next);\n  }\n\n  handleStart = () => {\n    this.clockRef.current.start();\n    this.setState({ timerOn: true });\n  };\n\n  handlePause = () => {\n    this.clockRef.current.pause();\n    const pausedTime = this.clockRef.current.calcTimeDelta().total;\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: pausedTime } });\n  };\n\n  handleRestart = () => {\n    const currentTab = tabData.find(tab => tab.tabName === this.state.currentTab.tabName)\n    this.setState({ timerOn: false, currentTab: { ...this.state.currentTab, time: currentTab.time } });\n    this.clockRef.current.stop();\n  }\n\n  render() {\n    return (\n      <div className=\"widget\">\n        <TabBar currentTab={this.state.currentTab.tabName} changeTab={this.changeTab} />\n        <Countdown \n          className=\"clock\"\n          date={Date.now() + (this.state.currentTab.time)} \n          autoStart={false} \n          controlled={false} \n          renderer={(props) => <span className=\"clock-numbers\">{props.minutes}:{zeroPad(props.seconds)}</span>} \n          ref={this.clockRef}\n          onComplete={this.handleCompletion}>\n        </Countdown>\n        <Controls timerOn={this.state.timerOn} handlePause={this.handlePause} handleStart={this.handleStart} handleRestart={this.handleRestart} pomodoros={this.state.pomodoros} />\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n\n\n","import './App.css';\nimport Widget from './Widget/Widget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}